/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from 'three'
import { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    SM_Buildings_Floor_1x1_01: THREE.Mesh
    ['SM_Buildings_Floor_1x1_01_(1)']: THREE.Mesh
    ['SM_Buildings_Floor_1x1_01_(2)']: THREE.Mesh
    ['SM_Buildings_Floor_1x1_01_(3)']: THREE.Mesh
    SM_Pawn_Run_Female_01: THREE.Mesh
    SM_Pawn_Cower_Female_01: THREE.Mesh
    SM_Pawn_Idle_Female_01: THREE.Mesh
    SM_Pawn_Weapon_Female_02: THREE.Mesh
  }
  materials: {
    PolygonPrototype_Global_Grid_01: THREE.MeshStandardMaterial
    PolygonPrototype_Texture_01: THREE.MeshStandardMaterial
  }
}

export default function Model({
  stencilRef,
  color,
  different,
  floor,
  model,
  ...props
}: Props) {
  const group = useRef<THREE.Group>()
  const { nodes } = useGLTF('/Ladies.glb') as GLTFResult

  const mainMaterial = (
    <meshStandardMaterial
      color={color}
      stencilWrite
      stencilRef={stencilRef}
      stencilFunc={THREE.EqualStencilFunc}
      stencilFail={THREE.KeepStencilOp}
      stencilZFail={THREE.KeepStencilOp}
      stencilZPass={THREE.ReplaceStencilOp}
    />
  )

  const lady1 = (
    <mesh
      renderOrder={2}
      castShadow
      receiveShadow
      geometry={nodes.SM_Pawn_Idle_Female_01.geometry}
      material={nodes.SM_Pawn_Idle_Female_01.material}
      position={[0.5, 0.05, -0.5]}
      rotation={[-Math.PI, 0, -Math.PI]}
    >
      {mainMaterial}
    </mesh>
  )

  const lady2 = (
    <mesh
      renderOrder={2}
      castShadow
      receiveShadow
      geometry={nodes.SM_Pawn_Cower_Female_01.geometry}
      material={nodes.SM_Pawn_Cower_Female_01.material}
      position={[0.5, 0.05, -0.5]}
      rotation={[0, -Math.PI / 2, 0]}
    >
      {mainMaterial}
    </mesh>
  )
  const lady3 = (
    <mesh
      renderOrder={2}
      castShadow
      receiveShadow
      geometry={nodes.SM_Pawn_Weapon_Female_02.geometry}
      material={nodes.SM_Pawn_Weapon_Female_02.material}
      position={[0.5, 0.05, -0.5]}
      rotation={[0, Math.PI / 2, 0]}
    >
      {mainMaterial}
    </mesh>
  )
  const lady4 = (
    <mesh
      renderOrder={2}
      castShadow
      receiveShadow
      geometry={nodes.SM_Pawn_Run_Female_01.geometry}
      material={nodes.SM_Pawn_Run_Female_01.material}
      position={[0.5, 0.05, -0.5]}
    >
      {mainMaterial}
    </mesh>
  )
  let Models = [null, lady1, lady2, lady3, lady4]

  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[-0.5, -1.05, 0.5]}>
        {floor && (
          <group scale={[1, 0.05, 1]} position={[0, 0.05, 0]}>
            <mesh
              renderOrder={2}
              castShadow
              receiveShadow
              geometry={nodes.SM_Buildings_Floor_1x1_01.geometry}
              position={[0.5, 0.05, -0.5]}
            >
              {mainMaterial}
            </mesh>
            <mesh
              renderOrder={2}
              castShadow
              receiveShadow
              geometry={nodes.SM_Buildings_Floor_1x1_01.geometry}
              position={[0.5, 0.05, 0.5]}
            >
              {mainMaterial}
            </mesh>
            <mesh
              renderOrder={2}
              castShadow
              receiveShadow
              geometry={nodes.SM_Buildings_Floor_1x1_01.geometry}
              position={[-0.5, 0.05, -0.5]}
            >
              {mainMaterial}
            </mesh>
            <mesh
              renderOrder={2}
              castShadow
              receiveShadow
              geometry={nodes.SM_Buildings_Floor_1x1_01.geometry}
              position={[-0.5, 0.05, 0.5]}
            >
              {mainMaterial}
            </mesh>
          </group>
        )}
        {Models[model]}
      </group>
    </group>
  )
}

useGLTF.preload('/Ladies.glb')
